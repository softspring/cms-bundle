{% trans_default_domain 'sfs_cms_contents' %}

{% embed '@SfsCms/admin/_embeds/_card.html.twig' with {'title': ('admin_'~content_type~'.version_info.compiled.title')|trans} %}
    {% trans_default_domain 'sfs_cms_contents' %}

    {% block title %}
        {% if sfs_cms_admin_content_recompile_enabled %}
            {% if not content_config.admin.version_recompile.is_granted or is_granted(content_config.admin.version_recompile.is_granted, version_entity) %}
                <a class="btn btn-sm btn-outline-secondary float-end"
                   href="{{ url('sfs_cms_admin_content_'~content_type~'_recompile_version', {'content':entity, 'version': version_entity, 'back': 'version_info'}) }}">{{ ('admin_'~content_type~'.version_info.actions.recompile.link')|trans }}</a>
            {% else %}
                <a class="btn btn-sm btn-outline-secondary float-end disabled">{{ ('admin_'~content_type~'.version_info.actions.recompile.link')|trans }}</a>
            {% endif %}
        {% endif %}

        {% if not content_config.admin.version_clear_compiled.is_granted or is_granted(content_config.admin.version_clear_compiled.is_granted, version_entity) %}
            <a class="btn btn-sm btn-outline-secondary float-end"
               href="{{ url('sfs_cms_admin_content_'~content_type~'_clear_compiled_version', {'content':entity, 'version': version_entity, 'back': 'version_info'}) }}">{{ ('admin_'~content_type~'.version_info.actions.clear_compiled.link')|trans }}</a>
        {% else %}
            <a class="btn btn-sm btn-outline-secondary float-end disabled">{{ ('admin_'~content_type~'.version_info.actions.clear_compiled.link')|trans }}</a>
        {% endif %}

        {{ parent() }}
    {% endblock %}

    {% block content %}
        {% import '@SfsCms/admin/content/_macros.html.twig' as tools %}

        {% if version.hasCompileErrors %}
            <div class="alert alert-danger" role="alert">
                <i class="bi bi-exclamation-triangle text-danger"
                   title="This version has some compilation error"></i>
                {{ ('admin_'~content_type~'.version_info.compiled.error')|trans }}
            </div>
        {% else %}
            {% if not content_can_be_compiled %}
                <div class="alert alert-warning" role="alert">
                    {{ ('admin_'~content_type~'.version_info.compiled.pre_compile_content_disabled')|trans }}
                </div>
            {% elseif version_entity.compiled is empty and sfs_cms_admin_content_recompile_enabled %}
                <div class="alert alert-danger" role="alert">
                    {{ ('admin_'~content_type~'.version_info.compiled.pre_compile_content_missing')|trans }}
                </div>
            {% endif %}

{#            {% if not content_can_compile_modules %}#}
{#                <div class="alert alert-warning" role="alert">#}
{#                    {{ ('admin_'~content_type~'.version_info.compiled.pre_compile_modules_disabled')|trans }}#}
{#                </div>#}
{#            {% elseif version_entity.compiled is empty and sfs_cms_admin_content_recompile_enabled %}#}
{#                <div class="alert alert-danger" role="alert">#}
{#                    {{ ('admin_'~content_type~'.version_info.compiled.pre_compile_modules_missing')|trans }}#}
{#                </div>#}
{#            {% endif %}#}
        {% endif %}

        <div class="accordion" id="accordionCompiled">
            <div class="accordion-item">
                {% set first = false %}
                {% for compiled in version_entity.compiled|filter((compiled)=>compiled.dataPart('content')|default(false)) %}
                    {% set keyCleaned = compiled.key|replace({'/': '', ' ': '', '.' : ''}) %}
                    <h2 class="accordion-header" id="heading{{ keyCleaned }}">
                        <button class="accordion-button {{ first?'':'collapsed' }}" type="button"
                                data-bs-toggle="collapse" data-bs-target="#collapse{{ keyCleaned }}"
                                aria-expanded="{{ first?'true':'false' }}"
                                aria-controls="collapse{{ keyCleaned }}">
                            Pre-compiled content {{ compiled.key }}
                        </button>
                    </h2>
                    <div id="collapse{{ keyCleaned }}"
                         class="accordion-collapse collapse {{ first?'show':'' }}"
                         aria-labelledby="heading{{ keyCleaned }}" data-bs-parent="#accordionCompiled">
                        <div class="accordion-body">
                            {% if compiled is not iterable %}
                                {{ tools.drawEsiCalls(compiled) }}
                                <pre class="overflow-auto"
                                     style="max-height: 600px"><code
                                        class="text-muted">{{ compiled.dataPart('content') }}</code></pre>
                            {% endif %}
                        </div>
                    </div>
                    {% set first = false %}
                {% endfor %}
                {% for compiled in version_entity.compiled|filter((compiled)=>compiled.dataPart('modules')|default(false)) %}
                    {% set keyCleaned = ('modules'~compiled.key)|replace({'/': '', ' ': '', '.': ''}) %}
                    <h2 class="accordion-header" id="heading{{ keyCleaned }}">
                        <button class="accordion-button {{ first?'':'collapsed' }}" type="button"
                                data-bs-toggle="collapse" data-bs-target="#collapse{{ keyCleaned }}"
                                aria-expanded="{{ first?'true':'false' }}"
                                aria-controls="collapse{{ keyCleaned }}">
                            Pre-compiled modules {{ compiled.key }}
                        </button>
                    </h2>
                    <div id="collapse{{ keyCleaned }}"
                         class="accordion-collapse collapse {{ first?'show':'' }}"
                         aria-labelledby="heading{{ keyCleaned }}" data-bs-parent="#accordionCompiled">
                        <div class="accordion-body">
                            {% for container, content in compiled|filter((content) => content is not iterable) %}
                                <strong>{{ container }}</strong>
                                {{ tools.drawEsiCalls(content) }}
                                <pre class="overflow-auto"
                                     style="max-height: 300px"><code class="text-muted">{{ content.dataPart('modules') }}</code></pre>
                            {% endfor %}
                        </div>
                    </div>
                    {% set first = false %}
                {% endfor %}
            </div>
        </div>
    {% endblock %}
{% endembed %}
